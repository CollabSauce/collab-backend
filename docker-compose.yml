version: '3.7'

services:
  collab_backend_web:
    container_name: collab_backend_web
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    entrypoint: ["/app/docker/development-entrypoint.sh"]
    command: bash -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ".:/app"
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - db
      - redis
    stdin_open: true
    tty: true

  collab_backend_worker:
    container_name: collab_backend_worker
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    entrypoint: ["/app/docker/development-entrypoint.sh"]
    command: celery -A collab worker -l info
    volumes:
      - ".:/app"
    env_file:
      - ./.env.dev
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - db
      - redis

  db:
    image: postgres:12.2-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    env_file:
      - ./.env.dev

  redis:
    image: redis:latest

volumes:
  postgres_data:
